swagger: '2.0'
info:
  description: 'This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.'
  version: 1.0.0
  title: Swagger Petstore
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: petstore.swagger.io
basePath: /v1
tags:
  - name: pet
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: store
    description: Access to Petstore orders
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
schemes:
  - https
paths:
  /companies:
    post:
      tags:
        - pet
      summary: Add delivery company
      description: Add delivery company. Only admin can run.
      operationId: ''
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Delivery company object.
          required: true
          schema:
            $ref: '#/definitions/Company'
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
            properties: {}
        '400':
          description: Request is invalid or parameters are incorrect
          schema:
            type: object
            properties: {}
        '409':
          description: Tried to register an ID that already exists
          schema:
            type: object
            properties: {}
    put:
      tags:
        - pet
      summary: Update delivery company
      description: Update delivery company. Only admin can run.
      operationId: ''
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Company'
          description: Delivery company object.
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
            properties: {}
        '400':
          description: Request is invalid or parameters are incorrect
          schema:
            type: object
            properties: {}
        '404':
          description: Requested resource does not exist
          schema:
            type: object
            properties: {}
    parameters: []
  '/company/{companyId}':
    get:
      tags:
        - store
      summary: Get delivery company
      description: Get delivery company.
      operationId: ''
      produces:
        - application/xml
        - application/json
      parameters:
        - name: orderId
          in: path
          description: ID of pet that needs to be fetched
          required: true
          type: integer
          maximum: 10
          minimum: 1
          format: int64
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/Company'
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
    delete:
      tags:
        - store
      summary: Delete delivery company
      description: Delete delivery company. Only admin can run.
      operationId: deleteOrder
      produces:
        - application/xml
        - application/json
      parameters:
        - name: orderId
          in: path
          description: ID of the order that needs to be deleted
          required: true
          type: integer
          minimum: 1
          format: int64
      responses:
        '204':
          description: No Content
          schema:
            type: object
            properties: {}
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
    parameters:
      - type: string
        name: companyId
        in: path
        required: true
securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
    flow: implicit
    scopes:
      'write:pets': modify pets in your account
      'read:pets': read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Company:
    title: Company
    type: object
    properties:
      id:
        type: integer
      companyName:
        type: string
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
